# Generated by Django 5.2.7 on 2025-10-24 15:00

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('text', models.TextField(blank=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('pending', 'Pending'), ('scheduled', 'Scheduled'), ('sent', 'Sent'), ('partial', 'Partial'), ('failed', 'Failed')], default='draft', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='posts/')),
                ('content_type', models.CharField(blank=True, max_length=120)),
                ('size_bytes', models.PositiveIntegerField(default=0)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media', to='posts.post')),
            ],
        ),
        migrations.CreateModel(
            name='SocialCredential',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('twitter', 'X/Twitter'), ('bluesky', 'Bluesky'), ('google_business', 'Google Business'), ('pinterest', 'Pinterest'), ('reddit', 'Reddit'), ('snapchat', 'Snapchat'), ('telegram', 'Telegram'), ('threads', 'Threads'), ('tiktok', 'TikTok'), ('youtube', 'YouTube')], max_length=40)),
                ('label', models.CharField(help_text='Nom lisible pour cette connexion', max_length=120)),
                ('client_id', models.CharField(blank=True, max_length=255)),
                ('client_secret', models.CharField(blank=True, max_length=255)),
                ('access_token', models.TextField(blank=True)),
                ('refresh_token', models.TextField(blank=True)),
                ('extra', models.JSONField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'unique_together': {('network', 'label')},
            },
        ),
        migrations.CreateModel(
            name='PostTarget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('network', models.CharField(choices=[('facebook', 'Facebook'), ('instagram', 'Instagram'), ('linkedin', 'LinkedIn'), ('twitter', 'X/Twitter'), ('bluesky', 'Bluesky'), ('google_business', 'Google Business'), ('pinterest', 'Pinterest'), ('reddit', 'Reddit'), ('snapchat', 'Snapchat'), ('telegram', 'Telegram'), ('threads', 'Threads'), ('tiktok', 'TikTok'), ('youtube', 'YouTube')], max_length=40)),
                ('status', models.CharField(choices=[('queued', 'Queued'), ('pending', 'Pending'), ('scheduled', 'Scheduled'), ('sent', 'Sent'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('scheduled_at', models.DateTimeField(blank=True, null=True)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='posts.post')),
            ],
            options={
                'unique_together': {('post', 'network')},
            },
        ),
    ]
